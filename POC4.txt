
pipeline {
    agent any
    options {
        ansiColor('xterm')
    }
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: '', url: ''
                echo "\033[32m Git checkout is successful! \033[0m"
            }
        }
        stage('Terraform Plan/apply') {
             when{
                expression { Destroy !='true'}
            }
            steps {
                script{
                    withCredentials([string(credentialsId: 'secret_key_aws', variable: 'aws_secret_key'), string(credentialsId: 'access_key_aws', variable: 'aws_access_key')]) {
                        //echo "current flag value: ${params.Flag}"
                       // sh 'terraform --version'
                        sh 'terraform init'
                        //echo "\033[32m Terraform successfully intitalized \033[0m"
                        echo "\033[35m Starting terraform planning \033[0m"
                        sh "terraform plan -var flag=${params.Flag} -var aws_access_key=${aws_access_key} -var aws_secret_key=${aws_secret_key}"
                        echo "\033[32m Terraform planning is successful! \033[0m"
                       // echo "Terraform planning is successful"
                        if(apply == 'true'){
                            echo "\033[35m Start applying terraform... \033[0m"
                            //echo "Start applying terraform"
                            sh "terraform apply -var flag=${params.Flag} -var aws_access_key=${aws_access_key} -var aws_secret_key=${aws_secret_key} -auto-approve"
                            //sh 'terraform plan -var flag=$params.Flag -var aws_access_key=$aws_access_key -var aws_secret_key=$aws_secret_key'
                         }
                    }
                }
            }
        }
            //this step executed iff Destroy==true else skipped
        stage('Terraform Destroy'){
            when{
                expression { Destroy =='true'}
            }
            steps{
                withCredentials([string(credentialsId: 'secret_key_aws', variable: 'aws_secret_key'), string(credentialsId: 'access_key_aws', variable: 'aws_access_key')]) {
                    echo "\033[31m Destroying infrastructure.... \033[0m"
                    //echo "Destroying infrastructure...."
                    sh "terraform destroy -var flag=${params.Flag} -var aws_access_key=${aws_access_key} -var aws_secret_key=${aws_secret_key} -auto-approve"
                // 
            }
            }
        }
    }
}
